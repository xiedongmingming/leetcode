Search for a Range

题目翻译：

给定有序整数数组，找到给定目标值的起止位置。
算法的运行时间复杂度必须是O(log n)。
如果未在数组中找到目标值，返回[-1, -1]。
例如，
给定[5, 7, 7, 8, 8, 10]，目标值为8，
返回[3, 4]。


分析：
        类似二分查找，但等于目标值时需要向左向右对其相邻元素进行判断。
public class Solution {
    public int[] searchRange(int[] A, int target) {
        int left = 0;
		int right = A.length - 1;

		int[] result = { -1, -1 };

		while (left <= right) {
			int mid = (left + right) / 2;

			if (A[mid] > target) {
				right = mid - 1;
			} else if (A[mid] < target) {
				left = mid + 1;
			} else {
				result[0] = mid;
				result[1] = mid;

				int i = mid - 1;
				while (i >= 0 && A[i] == target) {
					result[0] = i;
					--i;
				}

				i = mid + 1;
				while (i < A.length && A[i] == target) {
					result[1] = i;
					++i;
				}

				break;
			}
		}

		return result;
    }
}