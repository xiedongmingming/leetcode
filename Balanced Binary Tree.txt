Balanced Binary Tree

Given a binary tree, determine if it is height-balanced. For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1. Here the difinition of height balanced is a binary tree in which the depth of the two subtrees of every node never differ by more than 1. This means difference of max depth of left tree and right tree are less than or equal to 1. different with balanced is defined by all the node differs in depth less than or equal to 1.
依题意直接判断左右子树高度差是否不超过1.
/**
 * Definition for binary tree
 * public class TreeNode{
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x){ val = x; }
 * }
 */
public class Solution{
    public boolean isBalanced(TreeNode root){
        
    }
}

public boolean isBalanced(TreeNode root){
	if(root == null){
		return true;
	}
	if(Math.abs(getHeight(root.left) - getHeight(root.right)) > 1){
		return false;
	}
	return isBalanced(root.left) && isBalanced(root.right);
}
public int getHeight(TreeNode root){
	if(root == null){
		return 0;
	}
	int left = getHeight(root.left);
	int right = getHeight(root.right);
	return Math.max(left, right) + 1;
}

