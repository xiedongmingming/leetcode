Set Matrix Zeroes

Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place. 

click to show follow up.
Follow up: 
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution? 

public class Solution {
    public void setZeroes(int[][] matrix) {
        
    }
}

题目翻译：

给定一个m x n矩阵，如果一个元素是0，设置它所在的整个行和列为0。原地进行。
更进一步：
你使用额外空间了吗？
使用O(mn)空间的直接解法可能是一个坏主意。
一个简单的改进需要O(m + n)的空间，但仍然不是最好的解法。
你可以设计一个常数空间的解法吗？


分析：
        复用第一行和第一列。
public class Solution {
    public void setZeroes(int[][] matrix) {
        int m = matrix.length;
		int n = matrix[0].length;
		boolean row = false;
		boolean column = false;

		for (int i = 0; i < m; ++i) {
			if (matrix[i][0] == 0) {
				row = true;
				break;
			}
		}

		for (int j = 0; j < n; ++j) {
			if (matrix[0][j] == 0) {
				column = true;
				break;
			}
		}

		for (int i = 1; i < m; ++i)
			for (int j = 1; j < n; ++j) {
				if (matrix[i][j] == 0) {
					matrix[i][0] = 0;
					matrix[0][j] = 0;
				}
			}

		for (int i = 1; i < m; ++i) {
			if (matrix[i][0] == 0) {
				for (int j = 1; j < n; ++j) {
					matrix[i][j] = 0;
				}
			}
		}

		for (int j = 1; j < n; ++j) {
			if (matrix[0][j] == 0) {
				for (int i = 1; i < m; ++i) {
					matrix[i][j] = 0;
				}
			}
		}

		if (row) {
			for (int i = 0; i < m; ++i) {
				matrix[i][0] = 0;
			}
		}

		if (column) {
			for (int j = 0; j < n; ++j) {
				matrix[0][j] = 0;
			}
		}
    }
}
